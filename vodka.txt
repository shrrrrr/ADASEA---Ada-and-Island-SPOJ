// Binary series

// finding n th root of given Nuumber

#include<bits/stdc++.h>
#define ll long long int
#define mp make_pair
#define pb push_back


#define pf push_front

using namespace std;
const int N=1e6;
vector<int>a(N);
bool isprime(int n){
if(n<=1) return false;
if(n<=3) return true;
if(n%2==0||n%3==0) return false;
for(int i=5;i*i<=n;i+=6){
    if(n%i==0||n%(i+2)==0) return false;
}
return true;
}
int main(){
    for(int i=1;i<N;i++){
        if(isprime(i)){
           a.push_back(i*i);
        }
    }
int tt;cin>>tt;
int ans[tt];
for(int i=0;i<tt;i++){
    cin>>ans[i];
    auto it=find(a.begin(),a.end(),ans[i]);
    if(it==a.end()) cout<<"NO"<<endl;
    else cout<<"YES"<<endl;
    }
}
